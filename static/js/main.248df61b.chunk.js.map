{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/helpers.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addFilm","useState","query","queryHandler","findMovie","errorFilm","errorHandler","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","url","fetch","then","response","json","catch","error","Response","Title","Poster","imdbID","Plot","Object","keys","length","uniqueMovies","filter","film","defaultProps","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.248df61b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={`${imdbUrl}/`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/helpers';\n\nexport const FindMovie = ({ movies, addFilm }) => {\n  const [query, queryHandler] = useState('');\n  const [movie, findMovie] = useState({});\n  const [errorFilm, errorHandler] = useState(false);\n\n  const addMovieHandler = () => request(query).then((response) => {\n    if (response.Response === 'True') {\n      queryHandler('');\n      errorHandler(false);\n\n      return findMovie({\n        title: response.Title,\n        imgUrl: response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        description: response.Plot,\n        imdbId: response.imdbID,\n      });\n    }\n\n    return errorHandler(true);\n  });\n\n  const findMovieHandler = () => {\n    if (Object.keys(movie).length !== 0) {\n      addFilm((movies) => {\n        const uniqueMovies = movies.filter((film) => {\n          if (film.imdbId === movie.imdbId) {\n            return false;\n          }\n\n          return film;\n        });\n\n        return [...uniqueMovies, movie];\n      });\n      findMovie({});\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': errorFilm,\n              })}\n              value={query}\n              onChange={event => queryHandler(event.target.value)}\n            />\n          </div>\n\n          {errorFilm && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={addMovieHandler}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={findMovieHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {Object.keys(movie).length > 0 && (\n        <>\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            key={movie.imdbId}\n            {...movie}\n          />\n        </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }),\n  ),\n\n  addFilm: PropTypes.func.isRequired,\n};\n\nFindMovie.defaultProps = {\n  movies: [],\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=41fc156d&t=';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .catch(error => error);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, addFilm] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addFilm={addFilm}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}